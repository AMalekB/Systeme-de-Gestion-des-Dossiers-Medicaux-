generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Utilisateur {
  id             Int             @id @default(autoincrement())
  nom            String
  email          String          @unique
  motDePasse     String
  role           Role

  medecin        Medecin?
  administrateur Administrateur?
}

model Patient {
  id             Int              @id @default(autoincrement())
  nom            String
  prenom         String
  dateNaissance  DateTime
  adresse        String
  telephone      String

  // One-to-one avec DossierMedical
  dossierMedical DossierMedical?  // relation inversée
  allergies      Allergie[]
  rendezVous     RendezVous[]
}

model Allergie {
  id        Int     @id @default(autoincrement())
  nom       String
  patient   Patient @relation(fields: [patientId], references: [id])
  patientId Int
}

model Medecin {
  id             Int           @id @default(autoincrement())
  specialite     String
  utilisateur    Utilisateur   @relation(fields: [utilisateurId], references: [id])
  utilisateurId  Int           @unique

  prescriptions  Prescription[]
  rendezVous     RendezVous[]
}

model Administrateur {
  id            Int           @id @default(autoincrement())
  utilisateur   Utilisateur   @relation(fields: [utilisateurId], references: [id])
  utilisateurId Int           @unique
}

model DossierMedical {
  id                Int             @id @default(autoincrement())
  historiqueMedical String?
  notesMedecin      String?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  // Fichier unique par patient
  patient   Patient @relation(fields: [patientId], references: [id])
  patientId Int     @unique

  prescriptions      Prescription[]
}

model Prescription {
  id           Int            @id @default(autoincrement())
  date         DateTime
  description  String?

  // On conserve la référence au médecin qui l’a émise
  dossier      DossierMedical @relation(fields: [dossierId], references: [id])
  dossierId    Int
  medecin      Medecin        @relation(fields: [medecinId], references: [id])
  medecinId    Int

  medicaments  Medicament[]   @relation("PrescriptionMedicament")
}

model Medicament {
  id             Int           @id @default(autoincrement())
  nom            String
  dosage         String
  duree          String

  prescriptions  Prescription[] @relation("PrescriptionMedicament")
}

model RendezVous {
  id               Int       @id @default(autoincrement())
  date             DateTime
  heure            String
  typeConsultation String
  rappel           Boolean

  patient   Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  patientId Int

  medecin   Medecin @relation(fields: [medecinId], references: [id])
  medecinId Int
}

enum Role {
  ADMIN
  MEDECIN
}
